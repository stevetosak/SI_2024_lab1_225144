4.Користиме git init за да иницијализираме git.
5.Од страната на github го превземаме remote URL и го
поврзуваме нашиот локален репозиториум со
git remote add origin https://github.com/stevetosak/SI_2024_lab1_225144.git 
6./
7.Прво ги додаваме сите untracked фајлови со git add, тие стануваат staged, па правиме
commit со командата git commit -m "<порака>", каде што со -m ја
поставуваме commit пораката.*
8.git push -u origin master; Со оваа команда го синхронизираме
локалниот репозиториум со remote репозиториум на github (со -u опцијата
поставуваме upstream,што значи дека следниот пат кога сакаме да направиме
синхронизација, може само да повикаме git push и автоматски сите промени
ќе се постават на remote репозиториумот во origin/master.
9.Креираме две гранки со користење на командата git branch
10.Со git checkout <име на гранка> се префрлуваме од една гранка на друга.*
11.(7*)
12.(10*)
13.(7*)
14.(10*)
15.(7*)
16.(10*)
17.(7*)
18.Со git push origin --all од еднаш ги синхронизираме сите гранки со remote репозиториумот.
(Истото може да се оствари со повеќе индивидуални повици на git push origin <име на гранка>)
19.(10*)
20.Со git merge bug1 ја спојуваме гранката bug1 со master.
Притоа,не се случува конфликт па затоа, се користи Fast-Forward стратегијата
за спојување која ефективно ги додава промените од гранката bug1 на гранката master.
Со користење на merge се
21.(18*)
22.(10*)
23.Со git rebase master сегашната гранка (bug2) ја спојуваме со master гранката
така што добиваме линеарна историја на commit-ови, што прави да изгледа како 
гранката bug2 воопшто да не постоела: сите промени што се направиле на bug2 гранката
сега изгледаат како да биле направени на  master гранката.Во овој случај имаме конфликт:
во датотеката SILab1Main.java во линија 17, во едната гранка се повикува filterOddLengthStrings
а во другата се повикува makeBigStringFrom.Овој конфликт го решив така што отидов во фајлот каде
што е конфиктот и го променив, така што сега во master гранката се повикуваат двете функции една по друга,
а во bug2 гранката ја избришав линијата што го правеше конфликтот.
Со git rebase --continue се финализра rebase-от.
24.(10*)
25.(20*) Повторно се користи Fast-Forward стратегијата за спојување.
26.(18*)
27./
